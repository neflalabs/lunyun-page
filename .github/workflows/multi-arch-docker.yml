name: Build and push multi-arch Docker image

# Trigger on any branch push (ignore tag pushes to avoid workflow loops)
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'

permissions:
  contents: write   # needed to push tags back to the repo
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # ensure the token is available for pushing tags
          persist-credentials: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (multi-arch) to GHCR
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Log in to Docker Hub (if secrets present)
        if: secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_PASSWORD
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push (multi-arch) to Docker Hub (optional)
        if: secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_PASSWORD
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/lunyun-page:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/lunyun-page:${{ github.sha }}

      - name: Create and push build tag to repository
        # record the build by creating a tag referencing this commit
        env:
          TAG_NAME: build-${{ github.sha }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # create lightweight tag if not exists
          if git rev-parse -q --verify refs/tags/$TAG_NAME; then
            echo "Tag $TAG_NAME already exists"
          else
            git tag $TAG_NAME
            git push origin refs/tags/$TAG_NAME
          fi
